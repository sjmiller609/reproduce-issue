services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped

  app:
    build: .
    environment:
      - DATABASE_URL=postgres://postgres:postgres@pgbouncer:6432/postgres
      - ENABLE_PROFILING=true
      - RUST_LOG=trace,apalis_core=trace
    depends_on:
      - pgbouncer
    cpus: 0.5
    expose:
      - "8080"

  pgbouncer:
    image: bitnami/pgbouncer:latest
    ports:
      - "6432:6432"
    environment:
      - POSTGRESQL_HOST=db
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - PGBOUNCER_DATABASE=postgres
      - PGBOUNCER_PORT=6432
      - PGBOUNCER_POOL_MODE=session
      - PGBOUNCER_MAX_CLIENT_CONN=100
      - PGBOUNCER_DEFAULT_POOL_SIZE=10
      - PGBOUNCER_MAX_DB_CONNECTIONS=20
      - PGBOUNCER_MAX_USER_CONNECTIONS=20
      - PGBOUNCER_RESERVE_POOL_SIZE=5
      - PGBOUNCER_RESERVE_POOL_TIMEOUT=5
    depends_on:
      - db
    restart: unless-stopped
    mem_limit: 32m

  db:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 2s
      retries: 3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
